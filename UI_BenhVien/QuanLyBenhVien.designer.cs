#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UI_BenhVien
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QUANLYBENHVIEN")]
	public partial class QuanLyBenhVienDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertaccount(account instance);
    partial void Updateaccount(account instance);
    partial void Deleteaccount(account instance);
    partial void InsertBenhLy(BenhLy instance);
    partial void UpdateBenhLy(BenhLy instance);
    partial void DeleteBenhLy(BenhLy instance);
    partial void InsertBenhNhan(BenhNhan instance);
    partial void UpdateBenhNhan(BenhNhan instance);
    partial void DeleteBenhNhan(BenhNhan instance);
    partial void InsertChuyenNganh(ChuyenNganh instance);
    partial void UpdateChuyenNganh(ChuyenNganh instance);
    partial void DeleteChuyenNganh(ChuyenNganh instance);
    partial void InsertGiuongBenh(GiuongBenh instance);
    partial void UpdateGiuongBenh(GiuongBenh instance);
    partial void DeleteGiuongBenh(GiuongBenh instance);
    partial void InsertKhoa(Khoa instance);
    partial void UpdateKhoa(Khoa instance);
    partial void DeleteKhoa(Khoa instance);
    partial void InsertNguoiNha(NguoiNha instance);
    partial void UpdateNguoiNha(NguoiNha instance);
    partial void DeleteNguoiNha(NguoiNha instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    #endregion
		
		public QuanLyBenhVienDataContext() : 
				base(global::UI_BenhVien.Properties.Settings.Default.QUANLYBENHVIENConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyBenhVienDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyBenhVienDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyBenhVienDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyBenhVienDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<account> accounts
		{
			get
			{
				return this.GetTable<account>();
			}
		}
		
		public System.Data.Linq.Table<BenhLy> BenhLies
		{
			get
			{
				return this.GetTable<BenhLy>();
			}
		}
		
		public System.Data.Linq.Table<BenhNhan> BenhNhans
		{
			get
			{
				return this.GetTable<BenhNhan>();
			}
		}
		
		public System.Data.Linq.Table<ChuyenNganh> ChuyenNganhs
		{
			get
			{
				return this.GetTable<ChuyenNganh>();
			}
		}
		
		public System.Data.Linq.Table<DieuTri> DieuTris
		{
			get
			{
				return this.GetTable<DieuTri>();
			}
		}
		
		public System.Data.Linq.Table<GiuongBenh> GiuongBenhs
		{
			get
			{
				return this.GetTable<GiuongBenh>();
			}
		}
		
		public System.Data.Linq.Table<Khoa> Khoas
		{
			get
			{
				return this.GetTable<Khoa>();
			}
		}
		
		public System.Data.Linq.Table<NguoiNha> NguoiNhas
		{
			get
			{
				return this.GetTable<NguoiNha>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.account")]
	public partial class account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _usernamme;
		
		private string _password;
		
		private string _tenhienthi;
		
		private bool _admin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnusernammeChanging(string value);
    partial void OnusernammeChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OntenhienthiChanging(string value);
    partial void OntenhienthiChanged();
    partial void OnadminChanging(bool value);
    partial void OnadminChanged();
    #endregion
		
		public account()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usernamme", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string usernamme
		{
			get
			{
				return this._usernamme;
			}
			set
			{
				if ((this._usernamme != value))
				{
					this.OnusernammeChanging(value);
					this.SendPropertyChanging();
					this._usernamme = value;
					this.SendPropertyChanged("usernamme");
					this.OnusernammeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenhienthi", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string tenhienthi
		{
			get
			{
				return this._tenhienthi;
			}
			set
			{
				if ((this._tenhienthi != value))
				{
					this.OntenhienthiChanging(value);
					this.SendPropertyChanging();
					this._tenhienthi = value;
					this.SendPropertyChanged("tenhienthi");
					this.OntenhienthiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin", DbType="Bit NOT NULL")]
		public bool admin
		{
			get
			{
				return this._admin;
			}
			set
			{
				if ((this._admin != value))
				{
					this.OnadminChanging(value);
					this.SendPropertyChanging();
					this._admin = value;
					this.SendPropertyChanged("admin");
					this.OnadminChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BenhLy")]
	public partial class BenhLy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaBenh;
		
		private string _TenBenh;
		
		private EntitySet<BenhNhan> _BenhNhans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBenhChanging(int value);
    partial void OnMaBenhChanged();
    partial void OnTenBenhChanging(string value);
    partial void OnTenBenhChanged();
    #endregion
		
		public BenhLy()
		{
			this._BenhNhans = new EntitySet<BenhNhan>(new Action<BenhNhan>(this.attach_BenhNhans), new Action<BenhNhan>(this.detach_BenhNhans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBenh", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaBenh
		{
			get
			{
				return this._MaBenh;
			}
			set
			{
				if ((this._MaBenh != value))
				{
					this.OnMaBenhChanging(value);
					this.SendPropertyChanging();
					this._MaBenh = value;
					this.SendPropertyChanged("MaBenh");
					this.OnMaBenhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenBenh", DbType="NVarChar(50)")]
		public string TenBenh
		{
			get
			{
				return this._TenBenh;
			}
			set
			{
				if ((this._TenBenh != value))
				{
					this.OnTenBenhChanging(value);
					this.SendPropertyChanging();
					this._TenBenh = value;
					this.SendPropertyChanged("TenBenh");
					this.OnTenBenhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BenhLy_BenhNhan", Storage="_BenhNhans", ThisKey="MaBenh", OtherKey="MaBenh")]
		public EntitySet<BenhNhan> BenhNhans
		{
			get
			{
				return this._BenhNhans;
			}
			set
			{
				this._BenhNhans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BenhNhans(BenhNhan entity)
		{
			this.SendPropertyChanging();
			entity.BenhLy = this;
		}
		
		private void detach_BenhNhans(BenhNhan entity)
		{
			this.SendPropertyChanging();
			entity.BenhLy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BenhNhan")]
	public partial class BenhNhan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaBN;
		
		private string _HotenBN;
		
		private System.Nullable<bool> _GioiTinh;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private System.Nullable<int> _Tuoi;
		
		private string _Diachi;
		
		private System.Nullable<int> _MaBenh;
		
		private EntitySet<NguoiNha> _NguoiNhas;
		
		private EntityRef<BenhLy> _BenhLy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBNChanging(int value);
    partial void OnMaBNChanged();
    partial void OnHotenBNChanging(string value);
    partial void OnHotenBNChanged();
    partial void OnGioiTinhChanging(System.Nullable<bool> value);
    partial void OnGioiTinhChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnTuoiChanging(System.Nullable<int> value);
    partial void OnTuoiChanged();
    partial void OnDiachiChanging(string value);
    partial void OnDiachiChanged();
    partial void OnMaBenhChanging(System.Nullable<int> value);
    partial void OnMaBenhChanged();
    #endregion
		
		public BenhNhan()
		{
			this._NguoiNhas = new EntitySet<NguoiNha>(new Action<NguoiNha>(this.attach_NguoiNhas), new Action<NguoiNha>(this.detach_NguoiNhas));
			this._BenhLy = default(EntityRef<BenhLy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBN", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaBN
		{
			get
			{
				return this._MaBN;
			}
			set
			{
				if ((this._MaBN != value))
				{
					this.OnMaBNChanging(value);
					this.SendPropertyChanging();
					this._MaBN = value;
					this.SendPropertyChanged("MaBN");
					this.OnMaBNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotenBN", DbType="NVarChar(50)")]
		public string HotenBN
		{
			get
			{
				return this._HotenBN;
			}
			set
			{
				if ((this._HotenBN != value))
				{
					this.OnHotenBNChanging(value);
					this.SendPropertyChanging();
					this._HotenBN = value;
					this.SendPropertyChanged("HotenBN");
					this.OnHotenBNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="Bit")]
		public System.Nullable<bool> GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tuoi", DbType="Int")]
		public System.Nullable<int> Tuoi
		{
			get
			{
				return this._Tuoi;
			}
			set
			{
				if ((this._Tuoi != value))
				{
					this.OnTuoiChanging(value);
					this.SendPropertyChanging();
					this._Tuoi = value;
					this.SendPropertyChanged("Tuoi");
					this.OnTuoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diachi", DbType="NVarChar(1000)")]
		public string Diachi
		{
			get
			{
				return this._Diachi;
			}
			set
			{
				if ((this._Diachi != value))
				{
					this.OnDiachiChanging(value);
					this.SendPropertyChanging();
					this._Diachi = value;
					this.SendPropertyChanged("Diachi");
					this.OnDiachiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBenh", DbType="Int")]
		public System.Nullable<int> MaBenh
		{
			get
			{
				return this._MaBenh;
			}
			set
			{
				if ((this._MaBenh != value))
				{
					if (this._BenhLy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaBenhChanging(value);
					this.SendPropertyChanging();
					this._MaBenh = value;
					this.SendPropertyChanged("MaBenh");
					this.OnMaBenhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BenhNhan_NguoiNha", Storage="_NguoiNhas", ThisKey="MaBN", OtherKey="MaBN")]
		public EntitySet<NguoiNha> NguoiNhas
		{
			get
			{
				return this._NguoiNhas;
			}
			set
			{
				this._NguoiNhas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BenhLy_BenhNhan", Storage="_BenhLy", ThisKey="MaBenh", OtherKey="MaBenh", IsForeignKey=true)]
		public BenhLy BenhLy
		{
			get
			{
				return this._BenhLy.Entity;
			}
			set
			{
				BenhLy previousValue = this._BenhLy.Entity;
				if (((previousValue != value) 
							|| (this._BenhLy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BenhLy.Entity = null;
						previousValue.BenhNhans.Remove(this);
					}
					this._BenhLy.Entity = value;
					if ((value != null))
					{
						value.BenhNhans.Add(this);
						this._MaBenh = value.MaBenh;
					}
					else
					{
						this._MaBenh = default(Nullable<int>);
					}
					this.SendPropertyChanged("BenhLy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NguoiNhas(NguoiNha entity)
		{
			this.SendPropertyChanging();
			entity.BenhNhan = this;
		}
		
		private void detach_NguoiNhas(NguoiNha entity)
		{
			this.SendPropertyChanging();
			entity.BenhNhan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChuyenNganh")]
	public partial class ChuyenNganh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaChuyenNganh;
		
		private string _TenChuyenNganh;
		
		private EntitySet<NhanVien> _NhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChuyenNganhChanging(int value);
    partial void OnMaChuyenNganhChanged();
    partial void OnTenChuyenNganhChanging(string value);
    partial void OnTenChuyenNganhChanged();
    #endregion
		
		public ChuyenNganh()
		{
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChuyenNganh", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaChuyenNganh
		{
			get
			{
				return this._MaChuyenNganh;
			}
			set
			{
				if ((this._MaChuyenNganh != value))
				{
					this.OnMaChuyenNganhChanging(value);
					this.SendPropertyChanging();
					this._MaChuyenNganh = value;
					this.SendPropertyChanged("MaChuyenNganh");
					this.OnMaChuyenNganhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenChuyenNganh", DbType="NVarChar(50)")]
		public string TenChuyenNganh
		{
			get
			{
				return this._TenChuyenNganh;
			}
			set
			{
				if ((this._TenChuyenNganh != value))
				{
					this.OnTenChuyenNganhChanging(value);
					this.SendPropertyChanging();
					this._TenChuyenNganh = value;
					this.SendPropertyChanged("TenChuyenNganh");
					this.OnTenChuyenNganhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChuyenNganh_NhanVien", Storage="_NhanViens", ThisKey="MaChuyenNganh", OtherKey="MaChuyenNganh")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.ChuyenNganh = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.ChuyenNganh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DieuTri")]
	public partial class DieuTri
	{
		
		private System.Nullable<int> _MaBenh;
		
		private string _TenKhoa;
		
		public DieuTri()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBenh", DbType="Int")]
		public System.Nullable<int> MaBenh
		{
			get
			{
				return this._MaBenh;
			}
			set
			{
				if ((this._MaBenh != value))
				{
					this._MaBenh = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhoa", DbType="NVarChar(50)")]
		public string TenKhoa
		{
			get
			{
				return this._TenKhoa;
			}
			set
			{
				if ((this._TenKhoa != value))
				{
					this._TenKhoa = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiuongBenh")]
	public partial class GiuongBenh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _SoGiuongBenh;
		
		private string _SoPhongBenh;
		
		private string _TenKhoa;
		
		private EntityRef<Khoa> _Khoa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoGiuongBenhChanging(System.Nullable<int> value);
    partial void OnSoGiuongBenhChanged();
    partial void OnSoPhongBenhChanging(string value);
    partial void OnSoPhongBenhChanged();
    partial void OnTenKhoaChanging(string value);
    partial void OnTenKhoaChanged();
    #endregion
		
		public GiuongBenh()
		{
			this._Khoa = default(EntityRef<Khoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoGiuongBenh", DbType="Int")]
		public System.Nullable<int> SoGiuongBenh
		{
			get
			{
				return this._SoGiuongBenh;
			}
			set
			{
				if ((this._SoGiuongBenh != value))
				{
					this.OnSoGiuongBenhChanging(value);
					this.SendPropertyChanging();
					this._SoGiuongBenh = value;
					this.SendPropertyChanged("SoGiuongBenh");
					this.OnSoGiuongBenhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoPhongBenh", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SoPhongBenh
		{
			get
			{
				return this._SoPhongBenh;
			}
			set
			{
				if ((this._SoPhongBenh != value))
				{
					this.OnSoPhongBenhChanging(value);
					this.SendPropertyChanging();
					this._SoPhongBenh = value;
					this.SendPropertyChanged("SoPhongBenh");
					this.OnSoPhongBenhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhoa", DbType="NVarChar(50)")]
		public string TenKhoa
		{
			get
			{
				return this._TenKhoa;
			}
			set
			{
				if ((this._TenKhoa != value))
				{
					if (this._Khoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTenKhoaChanging(value);
					this.SendPropertyChanging();
					this._TenKhoa = value;
					this.SendPropertyChanged("TenKhoa");
					this.OnTenKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoa_GiuongBenh", Storage="_Khoa", ThisKey="TenKhoa", OtherKey="TenKhoa", IsForeignKey=true)]
		public Khoa Khoa
		{
			get
			{
				return this._Khoa.Entity;
			}
			set
			{
				Khoa previousValue = this._Khoa.Entity;
				if (((previousValue != value) 
							|| (this._Khoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Khoa.Entity = null;
						previousValue.GiuongBenhs.Remove(this);
					}
					this._Khoa.Entity = value;
					if ((value != null))
					{
						value.GiuongBenhs.Add(this);
						this._TenKhoa = value.TenKhoa;
					}
					else
					{
						this._TenKhoa = default(string);
					}
					this.SendPropertyChanged("Khoa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Khoa")]
	public partial class Khoa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TenKhoa;
		
		private EntitySet<GiuongBenh> _GiuongBenhs;
		
		private EntitySet<NhanVien> _NhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTenKhoaChanging(string value);
    partial void OnTenKhoaChanged();
    #endregion
		
		public Khoa()
		{
			this._GiuongBenhs = new EntitySet<GiuongBenh>(new Action<GiuongBenh>(this.attach_GiuongBenhs), new Action<GiuongBenh>(this.detach_GiuongBenhs));
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhoa", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TenKhoa
		{
			get
			{
				return this._TenKhoa;
			}
			set
			{
				if ((this._TenKhoa != value))
				{
					this.OnTenKhoaChanging(value);
					this.SendPropertyChanging();
					this._TenKhoa = value;
					this.SendPropertyChanged("TenKhoa");
					this.OnTenKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoa_GiuongBenh", Storage="_GiuongBenhs", ThisKey="TenKhoa", OtherKey="TenKhoa")]
		public EntitySet<GiuongBenh> GiuongBenhs
		{
			get
			{
				return this._GiuongBenhs;
			}
			set
			{
				this._GiuongBenhs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoa_NhanVien", Storage="_NhanViens", ThisKey="TenKhoa", OtherKey="TenKhoa")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GiuongBenhs(GiuongBenh entity)
		{
			this.SendPropertyChanging();
			entity.Khoa = this;
		}
		
		private void detach_GiuongBenhs(GiuongBenh entity)
		{
			this.SendPropertyChanging();
			entity.Khoa = null;
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.Khoa = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.Khoa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NguoiNha")]
	public partial class NguoiNha : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNN;
		
		private string _HoTen;
		
		private System.Nullable<int> _DienThoai;
		
		private System.Nullable<int> _MaBN;
		
		private EntityRef<BenhNhan> _BenhNhan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNNChanging(int value);
    partial void OnMaNNChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnDienThoaiChanging(System.Nullable<int> value);
    partial void OnDienThoaiChanged();
    partial void OnMaBNChanging(System.Nullable<int> value);
    partial void OnMaBNChanged();
    #endregion
		
		public NguoiNha()
		{
			this._BenhNhan = default(EntityRef<BenhNhan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNN", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaNN
		{
			get
			{
				return this._MaNN;
			}
			set
			{
				if ((this._MaNN != value))
				{
					this.OnMaNNChanging(value);
					this.SendPropertyChanging();
					this._MaNN = value;
					this.SendPropertyChanged("MaNN");
					this.OnMaNNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="Int")]
		public System.Nullable<int> DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBN", DbType="Int")]
		public System.Nullable<int> MaBN
		{
			get
			{
				return this._MaBN;
			}
			set
			{
				if ((this._MaBN != value))
				{
					if (this._BenhNhan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaBNChanging(value);
					this.SendPropertyChanging();
					this._MaBN = value;
					this.SendPropertyChanged("MaBN");
					this.OnMaBNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BenhNhan_NguoiNha", Storage="_BenhNhan", ThisKey="MaBN", OtherKey="MaBN", IsForeignKey=true)]
		public BenhNhan BenhNhan
		{
			get
			{
				return this._BenhNhan.Entity;
			}
			set
			{
				BenhNhan previousValue = this._BenhNhan.Entity;
				if (((previousValue != value) 
							|| (this._BenhNhan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BenhNhan.Entity = null;
						previousValue.NguoiNhas.Remove(this);
					}
					this._BenhNhan.Entity = value;
					if ((value != null))
					{
						value.NguoiNhas.Add(this);
						this._MaBN = value.MaBN;
					}
					else
					{
						this._MaBN = default(Nullable<int>);
					}
					this.SendPropertyChanged("BenhNhan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNV;
		
		private string _HotenNV;
		
		private string _ChucDanh;
		
		private string _TenKhoa;
		
		private System.Nullable<int> _MaChuyenNganh;
		
		private EntityRef<ChuyenNganh> _ChuyenNganh;
		
		private EntityRef<Khoa> _Khoa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(int value);
    partial void OnMaNVChanged();
    partial void OnHotenNVChanging(string value);
    partial void OnHotenNVChanged();
    partial void OnChucDanhChanging(string value);
    partial void OnChucDanhChanged();
    partial void OnTenKhoaChanging(string value);
    partial void OnTenKhoaChanged();
    partial void OnMaChuyenNganhChanging(System.Nullable<int> value);
    partial void OnMaChuyenNganhChanged();
    #endregion
		
		public NhanVien()
		{
			this._ChuyenNganh = default(EntityRef<ChuyenNganh>);
			this._Khoa = default(EntityRef<Khoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotenNV", DbType="NVarChar(50)")]
		public string HotenNV
		{
			get
			{
				return this._HotenNV;
			}
			set
			{
				if ((this._HotenNV != value))
				{
					this.OnHotenNVChanging(value);
					this.SendPropertyChanging();
					this._HotenNV = value;
					this.SendPropertyChanged("HotenNV");
					this.OnHotenNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChucDanh", DbType="NVarChar(50)")]
		public string ChucDanh
		{
			get
			{
				return this._ChucDanh;
			}
			set
			{
				if ((this._ChucDanh != value))
				{
					this.OnChucDanhChanging(value);
					this.SendPropertyChanging();
					this._ChucDanh = value;
					this.SendPropertyChanged("ChucDanh");
					this.OnChucDanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhoa", DbType="NVarChar(50)")]
		public string TenKhoa
		{
			get
			{
				return this._TenKhoa;
			}
			set
			{
				if ((this._TenKhoa != value))
				{
					if (this._Khoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTenKhoaChanging(value);
					this.SendPropertyChanging();
					this._TenKhoa = value;
					this.SendPropertyChanged("TenKhoa");
					this.OnTenKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChuyenNganh", DbType="Int")]
		public System.Nullable<int> MaChuyenNganh
		{
			get
			{
				return this._MaChuyenNganh;
			}
			set
			{
				if ((this._MaChuyenNganh != value))
				{
					if (this._ChuyenNganh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaChuyenNganhChanging(value);
					this.SendPropertyChanging();
					this._MaChuyenNganh = value;
					this.SendPropertyChanged("MaChuyenNganh");
					this.OnMaChuyenNganhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChuyenNganh_NhanVien", Storage="_ChuyenNganh", ThisKey="MaChuyenNganh", OtherKey="MaChuyenNganh", IsForeignKey=true)]
		public ChuyenNganh ChuyenNganh
		{
			get
			{
				return this._ChuyenNganh.Entity;
			}
			set
			{
				ChuyenNganh previousValue = this._ChuyenNganh.Entity;
				if (((previousValue != value) 
							|| (this._ChuyenNganh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChuyenNganh.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._ChuyenNganh.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._MaChuyenNganh = value.MaChuyenNganh;
					}
					else
					{
						this._MaChuyenNganh = default(Nullable<int>);
					}
					this.SendPropertyChanged("ChuyenNganh");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoa_NhanVien", Storage="_Khoa", ThisKey="TenKhoa", OtherKey="TenKhoa", IsForeignKey=true)]
		public Khoa Khoa
		{
			get
			{
				return this._Khoa.Entity;
			}
			set
			{
				Khoa previousValue = this._Khoa.Entity;
				if (((previousValue != value) 
							|| (this._Khoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Khoa.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._Khoa.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._TenKhoa = value.TenKhoa;
					}
					else
					{
						this._TenKhoa = default(string);
					}
					this.SendPropertyChanged("Khoa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
